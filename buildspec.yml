version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --no-cache --pull -t ${ECR_REPOSITORY_URI}:latest .
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${ECR_REPOSITORY_URI}:latest
      
      # Generate imagedefinitions.json
      - echo Creating imagedefinitions.json...
      - printf '[{"name":"loginapp","imageUri":"%s"}]' ${ECR_REPOSITORY_URI}:latest > imagedefinitions.json
      
      # Generate appspec.yaml
      - |
        cat << EOF > appspec.yaml
        version: 0.0
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: <TASK_DEFINITION>
                LoadBalancerInfo:
                  ContainerName: "loginapp"
                  ContainerPort: 80
                PlatformVersion: "LATEST"
        EOF
      
      # Process task definition
      - echo Processing task definition...
      - if [ -f taskdef.json ]; then
          jq empty taskdef.json && 
          TASK_DEFINITION=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text);
          sed -i "s|<TASK_DEFINITION>|$TASK_DEFINITION|g" appspec.yaml;
        fi

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yaml
    - taskdef.json
  discard-paths: yes

cache:
  paths:
    - '/root/.nuget/**/*'
