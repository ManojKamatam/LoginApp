version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --no-cache --pull -t ${ECR_REPOSITORY_URI}:latest .
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${ECR_REPOSITORY_URI}:latest
      - printf '[{"name":"loginapp","imageUri":"%s"}]' $ECR_REPOSITORY_URI:latest > imagedefinitions.json
      - echo Writing task definition file...
      - |
        cat << EOF > taskdef.json
        {
          "family": "login-app",
          "containerDefinitions": [
            {
              "name": "loginapp",
              "image": "${ECR_REPOSITORY_URI}:latest",
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 80,
                  "hostPort": 80,
                  "protocol": "tcp"
                }
              ],
              "environment": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "Production"
                }
              ],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "/ecs/loginapp",
                  "awslogs-region": "${AWS_DEFAULT_REGION}",
                  "awslogs-stream-prefix": "ecs"
                }
              }
            },
            {
              "name": "datadog-agent",
              "image": "public.ecr.aws/datadog/agent:latest",
              "essential": false,
              "environment": [
                {
                  "name": "DD_API_KEY",
                  "value": "24d4fd9b038e72e2beaaec1cdf2ab844"
                },
                {
                  "name": "ECS_FARGATE",
                  "value": "true"
                },
                {
                  "name": "DD_SITE",
                  "value": "datadoghq.com"
                }
              ],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "/ecs/datadog-agent",
                  "awslogs-region": "${AWS_DEFAULT_REGION}",
                  "awslogs-stream-prefix": "ecs"
                }
              }
            }
          ],
          "requiresCompatibilities": ["FARGATE"],
          "networkMode": "awsvpc",
          "cpu": "1024",
          "memory": "3072",
          "executionRoleArn": "${ECS_EXECUTION_ROLE_ARN}",
          "taskRoleArn": "${ECS_TASK_ROLE_ARN}"
        }

        EOF
      - echo Writing appspec file...
      - |
        cat << EOF > appspec.yaml
        version: 0.0
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: <TASK_DEFINITION>
                LoadBalancerInfo:
                  ContainerName: "loginapp"
                  ContainerPort: 80
                PlatformVersion: "LATEST"
        EOF
      - cat imagedefinitions.json
      - cat appspec.yaml

artifacts:
  files:
    - imagedefinitions.json
    - taskdef.json
    - appspec.yaml
  discard-paths: yes

cache:
  paths:
    - '/root/.nuget/**/*'
