version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
  
  build:
    commands:
      - echo "Build started on $(date)"
      - docker build --no-cache --pull -t ${ECR_REPOSITORY_URI}:latest .
  
  post_build:
    commands:
      - echo "Build completed on $(date)"
      - docker push ${ECR_REPOSITORY_URI}:latest
      - echo "[{\"name\":\"loginapp\",\"imageUri\":\"${ECR_REPOSITORY_URI}:latest\"}]" > imagedefinitions.json
      - sed -i "s|\${ECR_REPOSITORY_URI}|${ECR_REPOSITORY_URI}|g" taskdef.json
      - sed -i "s|\${AWS_DEFAULT_REGION}|${AWS_DEFAULT_REGION}|g" taskdef.json
      - sed -i "s|\${ECS_EXECUTION_ROLE_ARN}|${ECS_EXECUTION_ROLE_ARN}|g" taskdef.json
      - sed -i "s|\${ECS_TASK_ROLE_ARN}|${ECS_TASK_ROLE_ARN}|g" taskdef.json
      - EXISTING_TASK_DEF=$(aws ecs list-task-definitions --family login-app --sort DESC --query "taskDefinitionArns[0]" --output text)
      - if [ "$EXISTING_TASK_DEF" = "None" ] || [ -z "$EXISTING_TASK_DEF" ]; then TASK_DEFINITION=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query "taskDefinition.taskDefinitionArn" --output text); else TASK_DEFINITION=$EXISTING_TASK_DEF; fi
      - echo "TASK_DEFINITION=$TASK_DEFINITION"
      - aws ecs update-service --cluster LoginApp --service LoginApp --task-definition "$TASK_DEFINITION"
      - aws ecs update-service --cluster LoginApp --service LoginApp --force-new-deployment
      - echo "version: 0.0" > appspec.yaml
      - echo "Resources:" >> appspec.yaml
      - echo "  - TargetService:" >> appspec.yaml
      - echo "      Type: AWS::ECS::Service" >> appspec.yaml
      - echo "      Properties:" >> appspec.yaml
      - echo "        TaskDefinition: \"$TASK_DEFINITION\"" >> appspec.yaml
      - echo "        LoadBalancerInfo:" >> appspec.yaml
      - echo "          ContainerName: \"loginapp\"" >> appspec.yaml
      - echo "          ContainerPort: 80" >> appspec.yaml
      - echo "        PlatformVersion: \"LATEST\"" >> appspec.yaml
      - cat imagedefinitions.json
      - cat appspec.yaml
      - cat taskdef.json

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yaml
    - taskdef.json
  discard-paths: yes

cache:
  paths:
    - '/root/.nuget/**/*'
