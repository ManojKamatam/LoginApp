version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --no-cache --pull -t ${ECR_REPOSITORY_URI}:latest .
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${ECR_REPOSITORY_URI}:latest
      - echo Creating imagedefinitions.json...
      - printf '[{"name":"loginapp","imageUri":"%s"}]' ${ECR_REPOSITORY_URI}:latest > imagedefinitions.json
      - echo Processing task definition...
      - sed -i -e "s|\${ECR_REPOSITORY_URI}|${ECR_REPOSITORY_URI}|g" -e "s|\${AWS_DEFAULT_REGION}|${AWS_DEFAULT_REGION}|g" -e "s|\${ECS_EXECUTION_ROLE_ARN}|${ECS_EXECUTION_ROLE_ARN}|g" -e "s|\${ECS_TASK_ROLE_ARN}|${ECS_TASK_ROLE_ARN}|g" taskdef.json
      - jq empty taskdef.json || (echo "ERROR: taskdef.json is not valid JSON!" && exit 1)
      - echo Registering new task definition...
      - TASK_DEFINITION=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)
      - echo "version: 0.0" > appspec.yaml
      - echo "Resources:" >> appspec.yaml
      - echo "  - TargetService:" >> appspec.yaml
      - echo "      Type: AWS::ECS::Service" >> appspec.yaml
      - echo "      Properties:" >> appspec.yaml
      - echo "        TaskDefinition: ${TASK_DEFINITION}" >> appspec.yaml
      - echo "        LoadBalancerInfo:" >> appspec.yaml
      - echo "          ContainerName: \"loginapp\"" >> appspec.yaml
      - echo "          ContainerPort: 80" >> appspec.yaml
      - echo "        PlatformVersion: \"LATEST\"" >> appspec.yaml

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yaml
    - taskdef.json
  discard-paths: yes

cache:
  paths:
    - '/root/.nuget/**/*'
